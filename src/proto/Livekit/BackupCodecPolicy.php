<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: livekit_models.proto

namespace Livekit;

use UnexpectedValueException;

/**
 * Policy for publisher to handle subscribers that are unable to support the primary codec of a track
 *
 * Protobuf type <code>livekit.BackupCodecPolicy</code>
 */
class BackupCodecPolicy
{
    /**
     * default behavior, regress to backup codec and all subscribers will receive the backup codec
     *
     * Generated from protobuf enum <code>REGRESSION = 0;</code>
     */
    const REGRESSION = 0;
    /**
     * encoding/send the primary and backup codec simultaneously
     *
     * Generated from protobuf enum <code>SIMULCAST = 1;</code>
     */
    const SIMULCAST = 1;

    private static $valueToName = [
        self::REGRESSION => 'REGRESSION',
        self::SIMULCAST => 'SIMULCAST',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

